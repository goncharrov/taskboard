# Generated by Django 4.2.11 on 2024-05-06 19:33

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'db_table': 'task_department',
                'ordering': ['workspace', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('finish_date', models.DateField(blank=True, null=True, verbose_name='Плановая дата выполнения')),
                ('clousing_date', models.DateField(blank=True, null=True, verbose_name='Дата закрытия')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_project', to='task.department', verbose_name='Подразделение')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_project', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'db_table': 'task_project',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Статус проекта',
                'verbose_name_plural': 'Статусы проекта',
                'db_table': 'task_project_status',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('finish_date', models.DateField(blank=True, null=True, verbose_name='Плановая дата выполнения')),
                ('clousing_date', models.DateField(blank=True, null=True, verbose_name='Дата закрытия')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task', to='task.department', verbose_name='Подразделение')),
                ('executor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task_executor', to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task_owner', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='related_task', to='task.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'db_table': 'task_task',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Статус задачи',
                'verbose_name_plural': 'Статусы задачи',
                'db_table': 'task_task_status',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Роль пользователя',
                'verbose_name_plural': 'Роли пользователей',
                'db_table': 'task_user_roles',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Рабочее пространство',
                'verbose_name_plural': 'Рабочие пространства',
                'db_table': 'task_workspace',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='WorkspaceMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_workspace_members', to=settings.AUTH_USER_MODEL, verbose_name='Участник')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_workspace_members', to='task.workspace', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Участник пространства',
                'verbose_name_plural': 'Участники пространства',
                'db_table': 'task_workspace_members',
                'ordering': ['workspace', 'user'],
            },
        ),
        migrations.CreateModel(
            name='UserRights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_right', to='task.userroles', verbose_name='Роль')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_right', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Права пользователя',
                'verbose_name_plural': 'Права пользователей',
                'db_table': 'task_user_rights',
                'ordering': ['user', 'role'],
            },
        ),
        migrations.CreateModel(
            name='UnauthorizedAccessAttempts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=150, verbose_name='Url')),
                ('event_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата события')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Попытки несанкционированного доступа',
                'verbose_name_plural': 'Попытки несанкционированного доступа',
                'db_table': 'task_unauthorized_access_attempts',
                'ordering': ['-event_date'],
            },
        ),
        migrations.CreateModel(
            name='TaskNewMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_messages', models.IntegerField(default=0, verbose_name='Кол-во новых сообщений')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_task_message', to='task.task', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_task_message', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Новые сообщения в задаче',
                'verbose_name_plural': 'Новые сообщения в задаче',
                'db_table': 'task_task_new_messages',
                'ordering': ['task', 'user'],
            },
        ),
        migrations.CreateModel(
            name='TaskMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task_members', to='task.task', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task_members', to=settings.AUTH_USER_MODEL, verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Участник задачи',
                'verbose_name_plural': 'Участники задачи',
                'db_table': 'task_task_members',
                'ordering': ['task', 'user'],
            },
        ),
        migrations.CreateModel(
            name='TaskFinishDateHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finish_date', models.DateTimeField(verbose_name='Плановая дата выполнения')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task_finish_date_history', to='task.task', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task_finish_date_history', to=settings.AUTH_USER_MODEL, verbose_name='Установил')),
            ],
            options={
                'verbose_name': 'История изменения плановой даты выполнения',
                'verbose_name_plural': 'Истории изменения плановых дат выполнения',
                'db_table': 'task_task_finish_date_history',
                'ordering': ['task', 'user', 'finish_date'],
            },
        ),
        migrations.CreateModel(
            name='TaskDispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_reply_task_dispute', models.IntegerField(blank=True, default=0, verbose_name='ID родительского сообщения')),
                ('content', models.TextField(blank=True, verbose_name='Сообщение')),
                ('file', models.FileField(blank=True, upload_to='files/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('in_reply_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_task_dispute_in_reply_user', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_task_dispute', to='task.task', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_task_dispute', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Обсуждение задачи',
                'verbose_name_plural': 'Обсуждение задач',
                'db_table': 'task_task_dispute',
                'ordering': ['task', 'user'],
            },
        ),
        migrations.AddField(
            model_name='task',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task', to='task.taskstatus', verbose_name='Состояние'),
        ),
        migrations.AddField(
            model_name='task',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_task', to='task.workspace', verbose_name='Рабочее пространство'),
        ),
        migrations.CreateModel(
            name='ProjectMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_project_members', to='task.project', verbose_name='Проект')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_project_members', to=settings.AUTH_USER_MODEL, verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Участник проекта',
                'verbose_name_plural': 'Участники проекта',
                'db_table': 'task_project_members',
                'ordering': ['project', 'user'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_project', to='task.projectstatus', verbose_name='Состояние'),
        ),
        migrations.AddField(
            model_name='project',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_project', to='task.workspace', verbose_name='Рабочее пространство'),
        ),
        migrations.AddField(
            model_name='department',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_department', to='task.workspace', verbose_name='Рабочее пространство'),
        ),
    ]
